{"ast":null,"code":"var _jsxFileName = \"/Users/sagar/Documents/brainhub_react/my-app/src/App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport EventForm from './Form.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fields: {},\n      errors: {}\n    };\n    this.handleValidation = this.handleValidation.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  } // Validating form data\n\n\n  handleValidation() {\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true; //Validation for first name\n\n    if (!fields['firstName']) {\n      formIsValid = false;\n      errors[\"firstName\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"firstName\"] !== \"undefined\") {\n      if (!fields[\"firstName\"].match(/^[a-zA-Z]+$/)) {\n        formIsValid = false;\n        errors[\"firstName\"] = \"Only letters\";\n      }\n    } //validation for last name\n\n\n    if (!fields['lastName']) {\n      formIsValid = false;\n      errors[\"lastName\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"lastName\"] !== \"undefined\") {\n      if (!fields[\"lastName\"].match(/^[a-zA-Z]+$/)) {\n        formIsValid = false;\n        errors[\"lastName\"] = \"Only letters\";\n      }\n    } //Email validation\n\n\n    if (!fields[\"email\"]) {\n      formIsValid = false;\n      errors[\"email\"] = \"Cannot be empty\";\n    }\n\n    if (typeof fields[\"email\"] !== \"undefined\") {\n      let lastAtPos = fields[\"email\"].lastIndexOf('@');\n      let lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n      if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && fields[\"email\"].length - lastDotPos > 2)) {\n        formIsValid = false;\n        errors[\"email\"] = \"Email is not valid\";\n      }\n    }\n\n    this.setState({\n      errors: errors\n    });\n    return formIsValid;\n  }\n\n  handleChange(field, event) {\n    let fields = this.state.fields;\n    fields[field] = event.target.value;\n    this.setState({\n      fields\n    });\n  } // Submit form to api\n\n\n  handleSubmit(event) {\n    event.preventDefault(); // Data will be sent to api only if there are no errors produced\n\n    if (this.handleValidation()) {\n      fetch('http://localhost:9000/react', {\n        method: 'POST',\n        headers: {\n          'Accept': 'application/json',\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.state)\n      }).then(function (response) {\n        console.log(response);\n        return response.json();\n      }); // Below function is used to test form submission\n\n      this.props.handleSubmit();\n    }\n\n    console.log(this.state);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(EventForm, {\n      handleChange: this.handleChange,\n      handleSubmit: this.handleSubmit,\n      errors: this.state.errors,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/sagar/Documents/brainhub_react/my-app/src/App.js"],"names":["React","EventForm","App","Component","constructor","props","state","fields","errors","handleValidation","bind","handleChange","handleSubmit","formIsValid","match","lastAtPos","lastIndexOf","lastDotPos","indexOf","length","setState","field","event","target","value","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","console","log","json","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport EventForm from './Form.js'\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      fields: {},\n      errors: {}\n    }\n    this.handleValidation = this.handleValidation.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n// Validating form data\n  handleValidation(){\n    let fields = this.state.fields;\n    let errors = {};\n    let formIsValid = true;\n\n    //Validation for first name\n    if(!fields['firstName']){\n       formIsValid = false;\n       errors[\"firstName\"] = \"Cannot be empty\";\n    }\n\n    if(typeof fields[\"firstName\"] !== \"undefined\"){\n       if(!fields[\"firstName\"].match(/^[a-zA-Z]+$/)){\n          formIsValid = false;\n          errors[\"firstName\"] = \"Only letters\";\n       }        \n    }\n\n    //validation for last name\n    if(!fields['lastName']){\n      formIsValid = false;\n      errors[\"lastName\"] = \"Cannot be empty\";\n   }\n\n   if(typeof fields[\"lastName\"] !== \"undefined\"){\n      if(!fields[\"lastName\"].match(/^[a-zA-Z]+$/)){\n         formIsValid = false;\n         errors[\"lastName\"] = \"Only letters\";\n      }        \n   }\n\n    //Email validation\n    if(!fields[\"email\"]){\n       formIsValid = false;\n       errors[\"email\"] = \"Cannot be empty\";\n    }\n\n    if(typeof fields[\"email\"] !== \"undefined\"){\n       let lastAtPos = fields[\"email\"].lastIndexOf('@');\n       let lastDotPos = fields[\"email\"].lastIndexOf('.');\n\n       if (!(lastAtPos < lastDotPos && lastAtPos > 0 && fields[\"email\"].indexOf('@@') == -1 && lastDotPos > 2 && (fields[\"email\"].length - lastDotPos) > 2)) {\n          formIsValid = false;\n          errors[\"email\"] = \"Email is not valid\";\n        }\n   }  \n\n   this.setState({errors: errors});\n   return formIsValid;\n}\n\n\n  handleChange(field, event){\n    let fields = this.state.fields\n    fields[field] = event.target.value;        \n    this.setState({fields});\n}\n\n// Submit form to api\nhandleSubmit(event) {\n  event.preventDefault();\n\n\n// Data will be sent to api only if there are no errors produced\n  if(this.handleValidation()){\n    fetch('http://localhost:9000/react', \n    {\n        method: 'POST',\n        headers:{\n            'Accept': 'application/json',\n            \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(this.state)\n    }).then(function(response) {\n        console.log(response)\n        return response.json();\n    });\n\n    // Below function is used to test form submission\n     this.props.handleSubmit();\n  }\n    console.log(this.state)\n}\n\n  render(){\n    return (\n      <div className=\"App\">\n        <EventForm \n        handleChange={this.handleChange} \n        handleSubmit={this.handleSubmit} \n        errors={this.state.errors}\n        />\n      </div>\n    );\n  }\n  \n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}